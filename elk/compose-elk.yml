services:

  certs:
    container_name: elk_certs
    networks:
      - elk
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./certs/generate-certs.sh:/usr/local/bin/generate-certs.sh:ro
    user: "0"
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    command: ["bash", "/usr/local/bin/generate-certs.sh"]
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    restart: on-failure

  es01:
    container_name: elk_es01
    networks:
      - elk
    depends_on:
      certs:
        condition: service_healthy
    build:
      context: src/elasticsearch/
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es-data:/usr/share/elasticsearch/data
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - CA_CERT=certs/ca/ca.crt
      - SSL_CERTIFICATE=certs/es01/es01.crt
      - SSL_KEY=certs/es01/es01.key
      - LICENSE=${LICENSE}
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: unless-stopped

  ilm-manager:
    container_name: elk_ilm-manager
    networks:
      - elk
    depends_on:
      es01:
        condition: service_healthy
    build:
      context: src/ilm-manager/
    volumes:
      - certs:/certs:ro  
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    restart: on-failure

  kibana:
    container_name: elk_kibana
    networks:
      - elk
    depends_on:
      es01:
        condition: service_healthy
    build:
      context: src/kibana/
    labels:
      co.elastic.logs/module: kibana
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana-data:/usr/share/kibana/data
    expose:
      - "5601"
    environment:
      - ELASTIC_HOSTS=https://es01:9200
      - ELASTIC_USER=kibana_system
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - CA_CERT=config/certs/ca/ca.crt
      - SSL_CERTIFICATE=config/certs/kibana/kibana.crt
      - SSL_KEY=config/certs/kibana/kibana.key
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    mem_limit: ${KB_MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s --cacert /usr/share/kibana/config/certs/ca/ca.crt https://localhost:5601/kibana | grep -q 'HTTP/2 302'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: unless-stopped

  kibana-dashboards:
    container_name: elk_kibana-dashboards
    networks:
      - elk
    depends_on:
      kibana:
        condition: service_healthy
    build:
      context: src/kibana-dashboards/
    volumes:
      - certs:/certs:ro  
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    restart: on-failure

  logstash:
    container_name: elk_logstash
    networks:
      - elk
    depends_on:
      kibana:
        condition: service_healthy
      ilm-manager:
        condition: service_completed_successfully
    build:
      context: src/logstash/
    labels:
      co.elastic.logs/module: logstash
    volumes:
      - certs:/usr/share/logstash/certs
      - logstash-data:/usr/share/logstash/data
      - logstash-keystore:/usr/share/logstash/config
      - "./logstash_ingest_data/:/usr/share/logstash/ingest_data/"
    environment:
      - xpack.monitoring.enabled=false
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_HOSTS=https://es01:9200
      - LOGSTASH_KEYSTORE_PASS=${LOGSTASH_KEYSTORE_PASS}
      - LS_JAVA_OPTS=${LS_JAVA_OPTS}
    mem_limit: ${LS_MEM_LIMIT}
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f http://localhost:9600 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 120
    restart: unless-stopped

  filebeat:
    container_name: elk_filebeat
    networks:
      - elk
    depends_on:
      logstash:
        condition: service_healthy
    build:
      context: src/filebeat/
    labels:
      co.elastic.logs/module: filebeat
    volumes:
      - certs:/usr/share/filebeat/certs
      - filebeat-data:/usr/share/filebeat/data
      - app_logs:/var/log/app:ro 
    environment:
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_HOSTS=https://kibana:5601
      - LOGSTASH_HOSTS=logstash:5044
      - CA_CERT=/usr/share/filebeat/certs/ca/ca.crt
      - SSL_CERTIFICATE=/usr/share/filebeat/certs/filebeat/filebeat.crt
      - SSL_KEY=/usr/share/filebeat/certs/filebeat/filebeat.key
    restart: unless-stopped

